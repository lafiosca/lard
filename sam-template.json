{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "AWS serverless deployment helper resources",
    "Resources": {
        "CodePipelineLambdaVersioner": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "FunctionName": { "Fn::Sub": "${AWS::StackName}-CodePipelineLambdaVersioner" },
                "Handler": "index.handler",
                "Runtime": "nodejs6.10",
                "CodeUri": "src/codepipeline-lambda-versioner/export/dist.zip",
                "MemorySize": 128,
                "Timeout": 30,
                "Description": "CodePipeline custom action to publish versions of Lambda functions",
                "Policies": [
                    "AmazonS3FullAccess",
                    "AWSCodePipelineCustomActionAccess",
                    {
                        "Version" : "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": ["lambda:PublishVersion"],
                                "Resource": "*"
                            }
                        ]
                    }
                ]
            }
        },
        "CodePipelineLambdaAliaser": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "FunctionName": { "Fn::Sub": "${AWS::StackName}-CodePipelineLambdaAliaser" },
                "Handler": "index.handler",
                "Runtime": "nodejs6.10",
                "CodeUri": "src/codepipeline-lambda-aliaser/export/dist.zip",
                "MemorySize": 128,
                "Timeout": 30,
                "Description": "CodePipeline custom action to alias Lambda function versions",
                "Policies": [
                    "AmazonS3FullAccess",
                    "AWSCodePipelineCustomActionAccess",
                    {
                        "Version" : "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "lambda:UpdateAlias",
                                    "lambda:CreateAlias"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                ]
            }
        },
        "NewCodePipelineS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Condition": "CreateCodePipelineS3Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "BucketName": { "Fn::Sub": "codepipeline-artifacts-${AWS::Region}-${AWS::AccountId}" }
            }
        },
        "CodePipelineCloudFormationRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "CreateCodePipelineCloudFormationRole",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "cloudformation.amazonaws.com"
                            },
                            "Effect": "Allow"
                        }
                    ]
                },
                "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AdministratorAccess"],
                "Path": "/"
            }
        }
    },
    "Conditions": {
        "CreateCodePipelineS3Bucket": {
            "Fn::Equals": [{ "Ref": "CodePipelineS3Bucket" }, ""]
        },
        "CreateCodePipelineCloudFormationRole": {
            "Fn::Equals": [{ "Ref": "CreateCodePipelineCloudFormationAdminRole" }, "yes"]
        }
    },
    "Outputs": {
        "CodePipelineLambdaVersioner": {
            "Description": "CodePipeline Lambda Versioner function name",
            "Value": { "Ref": "CodePipelineLambdaVersioner" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:CodePipelineLambdaVersioner" } }
        },
        "CodePipelineLambdaAliaser": {
            "Description": "CodePipeline Lambda Aliaser function name",
            "Value": { "Ref": "CodePipelineLambdaAliaser" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:CodePipelineLambdaAliaser" } }
        },
        "CodePipelineS3Bucket": {
            "Description": "S3 Bucket for storing CodePipeline artifacts",
            "Value": {
                "Fn::If": [
                    "CreateCodePipelineS3Bucket",
                    { "Ref": "NewCodePipelineS3Bucket" },
                    { "Ref": "CodePipelineS3Bucket" }
                ]
            },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:CodePipelineS3Bucket" } }
        },
        "CodePipelineCloudFormationRole": {
            "Condition": "CreateCodePipelineCloudFormationRole",
            "Description": "CodePipeline service role for executing CloudFormation deployments",
            "Value": { "Ref": "CodePipelineCloudFormationRole" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:CodePipelineCloudFormationRole" } }
        }
    },
    "Parameters": {
        "CodePipelineS3Bucket": {
            "Description": "Existing S3 Bucket for storing CodePipeline artifacts; if not provided, create",
            "Type": "String",
            "Default": ""
        },
        "CreateCodePipelineCloudFormationAdminRole": {
            "Description": "Value of yes or no indicating whether to create CodePipeline CloudFormation role with Administrator access",
            "Default": "no",
            "Type": "String",
            "AllowedValues": ["yes", "no"],
            "ConstraintDescription": "must be yes or no"
        }
    }
}
